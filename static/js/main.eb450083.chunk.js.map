{"version":3,"sources":["components/AppHeader/AppHeader.js","components/TodoForm/TodoForm.js","components/TodoListItem/TodoListItem.js","components/TodoList/TodoList.js","components/AppFooter/AppFooter.js","components/App/App.js","index.js"],"names":["AppHeader","className","TodoForm","props","state","text","onChange","bind","onSubmit","e","this","setState","target","value","preventDefault","onAddTodo","type","placeholder","Component","TodoListItem","id","onDeleteTodo","onToggleChecked","htmlFor","onClick","Provider","color","size","TodoList","posts","items","map","item","itemsProps","key","AppFooter","buttons","name","allTodo","filter","onFilterSelect","clazz","App","data","JSON","parse","localStorage","getItem","Math","floor","random","newItem","isChecked","newArr","setItem","stringify","index","findIndex","elem","old","slice","length","visiblePosts","filterTodo","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eb450083.chunk.js","sourcesContent":["import React from 'react';\nimport './AppHeader.css';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"AppHeader\">\n            <div className=\"Logo\">TODO</div>\n        </header>\n    )\n};\n\nexport default AppHeader;\n","import React, {Component} from 'react';\nimport './TodoForm.css';\n\nexport default class TodoForm extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            text: '',\n        }\n\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n\n    }\n\n    onChange(e) {\n        this.setState({\n            text: e.target.value\n        })\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        this.props.onAddTodo(this.state.text)\n        this.setState({\n            text: ''\n        })\n    }\n\n    render() {\n        return (\n            <form\n                className=\"TodoForm\"\n                onSubmit={this.onSubmit}>\n                <input\n                    type=\"text\"\n                    placeholder=\"Введите что-нибудь...\"\n                    onChange={this.onChange}\n                    value={this.state.text} />\n            </form>\n        )\n    }\n};\n","import React from 'react';\nimport './TodoListItem.css';\nimport {IconContext} from \"react-icons\";\nimport {BsTrash} from \"react-icons/bs\";\n\nconst TodoListItem = ({id, text, onDeleteTodo, onToggleChecked}) => {\n    return (\n        <li className=\"TodoListItem\">\n            <div className=\"Input\" >\n                <input\n                    id={`todo-${id}`}\n                    type=\"checkbox\"\n                    onChange={onToggleChecked}/>\n                <label\n                    htmlFor={`todo-${id}`}\n                >{text}</label>\n            </div>\n            <div>\n                <button onClick={onDeleteTodo}>\n                    <IconContext.Provider value={{color: \"#416ad6\", size: \"1.3em\"}}>\n                        <BsTrash />\n                    </IconContext.Provider>\n                </button>\n            </div>\n        </li>\n    )\n};\n\nexport default TodoListItem;\n","import React from 'react';\nimport './TodoList.css'\n\nimport TodoListItem from '../TodoListItem/TodoListItem';\n\nconst TodoList = ({posts, onDeleteTodo, onToggleChecked}) => {\n\n    const items = posts.map(item => {\n        const {id, ...itemsProps} = item;\n        return (\n            <TodoListItem\n                {...itemsProps}\n                key={item.id}\n                id={id}\n                onDeleteTodo={() => onDeleteTodo(id)}\n                onToggleChecked={() => onToggleChecked(id)} />\n        )\n    })\n\n    return (\n        <ul className=\"TodoList\">\n            {items}\n        </ul>\n    )\n};\n\nexport default TodoList;\n","import React, {Component} from 'react';\nimport './AppFooter.css'\n\nexport default class AppFooter extends Component {\n    constructor(props) {\n        super(props)\n\n        this.buttons = [\n            {name: 'all', text: 'Все'},\n            {name: 'active', text: 'Активные'},\n            {name: 'completed', text: 'Завершенные'}\n        ]\n    }\n\n    render() {\n        const {allTodo, filter, onFilterSelect} = this.props;\n\n        const buttons = this.buttons.map(({name, text}) => {\n            const active = filter === name;\n            const clazz = active ? 'active' : null;\n            return (\n                <button\n                    type='button'\n                    key={name}\n                    className={clazz}\n                    onClick={() => onFilterSelect(name)}>\n                    {text}</button>\n            )\n        })\n\n        return (\n            <footer className=\"AppFooter\">\n                <div>Заметки {allTodo}</div>\n                <div className=\"TodoSortPanel\" >\n                    {buttons}\n                </div>\n            </footer>\n        )\n    }\n};\n","import React, {Component} from 'react';\nimport './App.css';\n\nimport AppHeader from '../AppHeader/AppHeader';\nimport TodoForm from '../TodoForm/TodoForm';\nimport TodoList from '../TodoList/TodoList';\nimport AppFooter from '../AppFooter/AppFooter';\n\nexport default class App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            // data: [\n            //     {id: localStorage.getItem(\"id\"), text: localStorage.getItem(\"text\"), isChecked: localStorage.getItem(\"isChecked\")},\n            //     {id: \"0\", text: \"Выспаться\", isChecked: false},\n            //     {id: \"1\", text: \"Сходить на море\", isChecked: false},\n            //     {id: \"2\", text: \"Поиграть в баскетбол\", isChecked: false},\n            // ],\n            data: JSON.parse(localStorage.getItem('data') || '[]'),\n            filter: 'all',\n        }\n\n        this.id = Math.floor(Math.random() * 100);\n\n        this.onAddTodo = this.onAddTodo.bind(this);\n        this.onDeleteTodo = this.onDeleteTodo.bind(this);\n        this.onFilterSelect = this.onFilterSelect.bind(this);\n        this.onToggleChecked = this.onToggleChecked.bind(this);\n    }\n\n    onAddTodo(text) {\n        const newItem = {\n            id: this.id++,\n            text: text,\n            isChecked: false\n        }\n\n        this.setState(({data}) => {\n            const newArr = [...data, newItem];\n            localStorage.setItem('data', JSON.stringify(newArr))\n\n            return {\n                data: newArr,\n            }\n        })\n    }\n\n    onDeleteTodo(id) {\n        this.setState(({data}) => {\n            const newArr = data.filter(item => item.id !== id)\n            localStorage.setItem('data', JSON.stringify(newArr))\n            return {\n                data: newArr\n            }\n        })\n    }\n\n    onToggleChecked(id) {\n        this.setState(({data}) => {\n            const index = data.findIndex(elem => elem.id === id);\n            const old = data[index];\n            const newItem = {...old, isChecked: !old.isChecked};\n            const newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)];\n            localStorage.setItem('data', JSON.stringify(newArr))\n            return {\n                data: newArr\n            }\n        })\n    }\n\n    filterTodo(items, filter) {\n        if (filter === 'completed') {\n            return items.filter(item => item.isChecked);\n        } else if (filter === 'active') {\n            return items.filter(item => !item.isChecked);\n        } else {\n            return items\n        }\n    }\n\n    onFilterSelect(filter) {\n        this.setState({filter})\n    }\n\n    render() {\n        const {data, id, filter} = this.state;\n        const allTodo = data.length;\n        const visiblePosts = this.filterTodo(data, filter);\n\n        return (\n            <div className=\"App\">\n                <AppHeader />\n                <TodoForm\n                    onAddTodo={this.onAddTodo} />\n                <TodoList\n                    posts={visiblePosts}\n                    id={id}\n                    onDeleteTodo={this.onDeleteTodo}\n                    onToggleChecked={this.onToggleChecked} />\n                <AppFooter\n                    allTodo={allTodo}\n                    filter={filter}\n                    onFilterSelect={this.onFilterSelect} />\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}